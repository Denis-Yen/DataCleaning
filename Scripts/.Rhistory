ggplot(aes(Departamento)) +
geom_bar(position = 'dodge')
data21 %>% filter(Departamento != "lima metropolitana") %>%
ggplot(aes(Departamento)) +
geom_bar(position = 'dodge') +
coord_flip()
data21 %>% filter(Departamento != "lima metropolitana") %>%
ggplot(aes(Departamento)) +
geom_bar(stat = 'identity', position = 'dodge') +
coord_flip()
data21 %>% filter(Departamento != "lima metropolitana") %>%
ggplot(aes(Departamento)) +
geom_bar(stat = 'identity', position = 'dodge') +
coord_flip()
data21 %>% filter(Departamento != "lima metropolitana") %>%
ggplot(aes(Departamento, fill = Sexo)) +
geom_bar(stat = 'identity', position = 'dodge') +
coord_flip()
data21 %>% filter(Departamento != "lima metropolitana") %>%
ggplot(aes(Departamento)) +
geom_bar(fill = Sexo, stat = 'identity', position = 'dodge') +
coord_flip()
data21 %>% filter(Departamento != "lima metropolitana") %>%
ggplot(aes(Departamento)) +
geom_bar(position = 'dodge') +
coord_flip() +
theme_dark()
data21 %>% filter(Departamento != "lima metropolitana") %>%
ggplot(aes(Departamento)) +
geom_bar(position = 'dodge') +
coord_flip() +
theme_minimal()
data21 %>%
ggplot(aes(Departamento)) +
geom_bar(position = 'dodge') +
coord_flip() +
theme_minimal()
data21 %>%
ggplot(aes(Departamento)) +
geom_bar(position = 'dodge') +
coord_flip() +
theme_light()
data21 %>%
ggplot(aes(Departamento)) +
geom_bar(position = 'dodge') +
coord_flip() +
theme_minimal() +
labs(title = "Fallecidos por COVID-19, según departamento",
caption = "a" )
data21 %>%
ggplot(aes(Departamento)) +
geom_bar(position = 'dodge') +
coord_flip() +
theme_minimal() +
labs(title = "Fallecidos por COVID-19, según departamento",
caption = "www.outliers.com \n Autor: Denis Rodríguez" )
data21 %>%
ggplot(aes(Departamento)) +
geom_bar(position = 'dodge') +
coord_flip() +
theme_minimal() +
labs(title = "Fallecidos por COVID-19, según departamento",
caption = "www.outliers.com \n Autor: Denis Rodríguez",tag = "to-left")
data21 %>%
ggplot(aes(Departamento)) +
geom_bar(position = 'dodge') +
coord_flip() +
theme_minimal() +
labs(title = "Fallecidos por COVID-19, según departamento",
xlab = "a"
caption = "www.outliers.com \n Autor: Denis Rodríguez")
data21 %>%
ggplot(aes(Departamento)) +
geom_bar(position = 'dodge') +
coord_flip() +
theme_minimal() +
labs(title = "Fallecidos por COVID-19, según departamento",
ylab("g")
caption = "www.outliers.com \n Autor: Denis Rodríguez")
data21 %>%
ggplot(aes(Departamento)) +
geom_bar(position = 'dodge') +
coord_flip() +
theme_minimal() +
labs(title = "Fallecidos por COVID-19, según departamento",
caption = "www.outliers.com \n Autor: Denis Rodríguez")
data21 %>%
ggplot(aes(Departamento)) +
geom_bar(position = 'dodge') +
coord_flip() +
theme_minimal() +
labs(title = "Fallecidos por COVID-19, según departamento",
caption = "www.outliers.com \n Autor: Denis Rodríguez") +
ylab(NULL)
data21 %>%
ggplot(aes(Departamento)) +
geom_bar(position = 'dodge') +
coord_flip() +
theme_minimal() +
labs(title = "Fallecidos por COVID-19, según departamento",
caption = "www.outliers.com \n Autor: Denis Rodríguez") +
ylab("Cantidad de Fallecidos")
data21 %>%
ggplot(aes(Departamento)) +
geom_bar(position = 'dodge') +
coord_flip() +
theme_minimal() +
labs(title = "Fallecidos por COVID-19, según departamento",
caption = "www.outliers.com \n Autor: Denis Rodríguez") +
ylab("Cantidad de Fallecidos") +
xlab("Departamentos")
data21 %>%
ggplot(aes(Departamento)) +
geom_bar(position = 'dodge') +
coord_flip() +
theme_minimal() +
labs(title = "Fallecidos por COVID-19, según departamento",
caption = "Fuente: www.outliers.com \n Autor: Denis Rodríguez \n www.github/Denis-Yen" ) +
ylab("Cantidad de Fallecidos") +
xlab("Departamentos")
data21$FechaMuerte2 = as.Date(data21$FechaMuerte)
head(data21)
tail(data21)
data21 %>%
filter(FechaMuerte2 <= "2020-12-31") %>%
count(week = floor_date(FechaMuerte2, "week")) %>%
ggplot(aes(week, n)) +
geom_line()
library(tidyverse)
library(lubridate)
data21 %>%
filter(FechaMuerte2 <= "2020-12-31") %>%
count(week = floor_date(FechaMuerte2, "week")) %>%
ggplot(aes(week, n)) +
geom_line()
data21 %>%
filter(FechaMuerte2 <= "2020-12-31") %>%
count(week = floor_date(FechaMuerte2, "week"))
44+12
data21 %>%
filter(FechaMuerte2 > "2020-12-31") %>%
count(week = floor_date(FechaMuerte2, "week")) %>%
ggplot(aes(week, n)) +
geom_line()
25+15+15
data21 %>%
#filter(FechaMuerte2 > "2020-12-31") %>%
count(week = floor_date(FechaMuerte2, "week")) %>%
ggplot(aes(week, n)) +
geom_line()
data21 %>%
#filter(FechaMuerte2 > "2020-12-31") %>%
count(week = floor_date(FechaMuerte2, "week"))
data21 %>%
#filter(FechaMuerte2 > "2020-12-31") %>%
count(week = floor_date(FechaMuerte2, "week")) %>%
ggplot(aes(week, n)) +
geom_line() +
facet_wrap(Departamento)
?facet_wrap
data21 %>%
#filter(FechaMuerte2 > "2020-12-31") %>%
count(week = floor_date(FechaMuerte2, "week")) %>%
ggplot(aes(week, n)) +
geom_line() +
theme_gray()
data21 %>%
#filter(FechaMuerte2 > "2020-12-31") %>%
count(week = floor_date(FechaMuerte2, "week")) %>%
ggplot(aes(week, n)) +
geom_line() +
theme_dark()
data21 %>%
#filter(FechaMuerte2 > "2020-12-31") %>%
count(week = floor_date(FechaMuerte2, "week")) %>%
ggplot(aes(week, n)) +
geom_line() +
theme_minimal()
data21 %>%
#filter(FechaMuerte2 > "2020-12-31") %>%
count(week = floor_date(FechaMuerte2, "week")) %>%
ggplot(aes(week, n)) +
geom_line() +
ggtitle("a")
data21 %>%
#filter(FechaMuerte2 > "2020-12-31") %>%
count(week = floor_date(FechaMuerte2, "week")) %>%
ggplot(aes(week, n)) +
geom_line() +
ggtitle("Fallecidos por COVID-19 con acumulación semanal")
data21 %>%
#filter(FechaMuerte2 > "2020-12-31") %>%
count(week = floor_date(FechaMuerte2, "week")) %>%
ggplot(aes(week, n)) +
geom_line() +
ggtitle("Fallecidos por COVID-19 con acumulación semanal") +
ylab("Cantidad")
data21 %>%
#filter(FechaMuerte2 > "2020-12-31") %>%
count(week = floor_date(FechaMuerte2, "week")) %>%
ggplot(aes(week, n)) +
geom_line() +
ggtitle("Fallecidos por COVID-19 con acumulación semanal") +
ylab("Cantidad") +
xlab("Semana")
data21 %>%
#filter(FechaMuerte2 > "2020-12-31") %>%
count(week = floor_date(FechaMuerte2, "week")) %>%
ggplot(aes(week, n)) +
geom_line(color = "red") +
ggtitle("Fallecidos por COVID-19 con acumulación semanal") +
ylab("Cantidad") +
xlab("Semana")
data21 %>%
#filter(FechaMuerte2 > "2020-12-31") %>%
count(week = floor_date(FechaMuerte2, "week")) %>%
ggplot(aes(week, n)) +
geom_line(color = "red", size = 2) +
ggtitle("Fallecidos por COVID-19 con acumulación semanal") +
ylab("Cantidad") +
xlab("Semana")
data21 %>%
#filter(FechaMuerte2 > "2020-12-31") %>%
count(week = floor_date(FechaMuerte2, "week")) %>%
ggplot(aes(week, n)) +
geom_line(color = "red", size = 0.5) +
ggtitle("Fallecidos por COVID-19 con acumulación semanal") +
ylab("Cantidad") +
xlab("Semana")
data21 %>%
#filter(FechaMuerte2 > "2020-12-31") %>%
count(week = floor_date(FechaMuerte2, "week")) %>%
ggplot(aes(week, n)) +
geom_line(color = "red", size = 0.5) +
ggtitle("Fallecidos por COVID-19 con acumulación semanal") +
ylab("Cantidad") +
xlab("Semana") +
labels()
data21 %>%
#filter(FechaMuerte2 > "2020-12-31") %>%
count(week = floor_date(FechaMuerte2, "week")) %>%
ggplot(aes(week, n)) +
geom_line(color = "red", size = 0.5) +
labs(title = "Fallecidos por COVID-19 con acumulación semanal",
caption = "www.outliers.com") +
ylab("Cantidad") +
xlab("Semana")
data21 %>%
#filter(FechaMuerte2 > "2020-12-31") %>%
count(week = floor_date(FechaMuerte2, "day")) %>%
ggplot(aes(week, n)) +
geom_line(color = "#00BB92", size = 0.8) +
labs(title = "Fallecidos por COVID-19 (acumulación diaria)",
subtitle = "07/04/2019 - 09/06/2021",
caption = "www.outliers.com \nAutor: Denis Rodríguez",
x = "Semana",
y = "Catidad de fallecidos") +
theme_grey(base_size = 12, base_line_size = 0.6, base_rect_size = 0.6) -> p1
library(lubridate)
library(tidyverse)
library(ggdark)
library(extrafont)
data21 %>%
ggplot(aes(Departamento)) +
geom_bar(position = 'dodge') +
coord_flip() +
theme_minimal() +
labs(title = "Fallecidos por COVID-19, según departamento",
caption = "Fuente: www.outliers.com \n Autor: Denis Rodríguez \n www.github/Denis-Yen" ) +
ylab("Cantidad de Fallecidos") +
xlab("Departamentos")
data21 %>%
#filter(FechaMuerte2 > "2020-12-31") %>%
count(week = floor_date(FechaMuerte2, "day")) %>%
ggplot(aes(week, n)) +
geom_line(color = "#00BB92", size = 0.8) +
labs(title = "Fallecidos por COVID-19 (acumulación diaria)",
subtitle = "07/04/2019 - 09/06/2021",
caption = "www.outliers.com \nAutor: Denis Rodríguez",
x = "Semana",
y = "Catidad de fallecidos") +
theme_grey(base_size = 12, base_line_size = 0.6, base_rect_size = 0.6) -> p1
p1 + dark_theme_dark(base_family = "Arial Black", base_size = 10) +
theme(plot.title = element_text(family = "Arial Black", hjust = 0.5),
plot.subtitle = element_text(family = "Arial Black", hjust = 0.5),
plot.caption = element_text(family = "Arial Black", hjust = 0),
plot.background = element_rect(fill = "#121E1E"),
panel.background = element_blank(),
panel.grid.major = element_line(color = "gray30", size = 0.2),
panel.grid.minor = element_line(color = "gray30", size = 0.2))
data21 %>%
#filter(FechaMuerte2 > "2020-12-31") %>%
count(week = floor_date(FechaMuerte2, "day")) %>%
ggplot(aes(week, n)) +
geom_line(color = "#00BB92", size = 0.8) +
labs(title = "Fallecidos por COVID-19 (acumulación diaria)",
subtitle = "07/04/2019 - 09/06/2021",
caption = "www.outliers.com \nAutor: Denis Rodríguez",
x = "Semana",
y = "Catidad de fallecidos") +
theme_grey(base_size = 12, base_line_size = 0.6, base_rect_size = 0.6) -> p1
data21$FechaMuerte2 = as.Date(data21$FechaMuerte)
data21 %>%
#filter(FechaMuerte2 > "2020-12-31") %>%
count(week = floor_date(FechaMuerte2, "day")) %>%
ggplot(aes(week, n)) +
geom_line(color = "#00BB92", size = 0.8) +
labs(title = "Fallecidos por COVID-19 (acumulación diaria)",
subtitle = "07/04/2019 - 09/06/2021",
caption = "www.outliers.com \nAutor: Denis Rodríguez",
x = "Semana",
y = "Catidad de fallecidos") +
theme_grey(base_size = 12, base_line_size = 0.6, base_rect_size = 0.6) -> p1
p1 + dark_theme_dark(base_family = "Arial Black", base_size = 10) +
theme(plot.title = element_text(family = "Arial Black", hjust = 0.5),
plot.subtitle = element_text(family = "Arial Black", hjust = 0.5),
plot.caption = element_text(family = "Arial Black", hjust = 0),
plot.background = element_rect(fill = "#121E1E"),
panel.background = element_blank(),
panel.grid.major = element_line(color = "gray30", size = 0.2),
panel.grid.minor = element_line(color = "gray30", size = 0.2))
data21 %>%
ggplot(aes(Departamento)) +
geom_bar(position = 'dodge') +
coord_flip() +
theme_minimal() +
labs(title = "Fallecidos por COVID-19, según departamento",
caption = "Fuente: www.outliers.com \n Autor: Denis Rodríguez \n www.github/Denis-Yen" ) +
ylab("Cantidad de Fallecidos") +
xlab("Departamentos")
data2 %>% unite(fecha, Year,Month, sep = "-") %>%
unite(FechaMuerte, fecha, Day, sep = "-") %>%
mutate(FechaMuerte2 = as.Date(FechaMuerte2))
data2 %>% unite(fecha, Year,Month, sep = "-") %>%
unite(FechaMuerte, fecha, Day, sep = "-") %>%
mutate(FechaMuerte2 = as.Date(FechaMuerte))
data21 %>%
#filter(FechaMuerte2 > "2020-12-31") %>%
count(week = floor_date(FechaMuerte2, "day")) %>%
ggplot(aes(week, n)) +
geom_line(color = "#00BB92", size = 0.8) +
labs(title = "Fallecidos por COVID-19 (acumulación diaria)",
subtitle = "07/04/2019 - 09/06/2021",
caption = "Centro Nacional de Epidemiologia, prevención y Control de Enfermedades – MINSA \nAutor: Denis Rodríguez",
x = "Semana",
y = "Catidad de fallecidos") +
theme_grey(base_size = 12, base_line_size = 0.6, base_rect_size = 0.6) -> p1
p1 + dark_theme_dark(base_family = "Arial Black", base_size = 10) +
theme(plot.title = element_text(family = "Arial Black", hjust = 0.5),
plot.subtitle = element_text(family = "Arial Black", hjust = 0.5),
plot.caption = element_text(family = "Arial Black", hjust = 0),
plot.background = element_rect(fill = "#121E1E"),
panel.background = element_blank(),
panel.grid.major = element_line(color = "gray30", size = 0.2),
panel.grid.minor = element_line(color = "gray30", size = 0.2))
p1 + dark_theme_dark(base_family = "Arial Black", base_size = 10) +
theme(plot.title = element_text(family = "Arial Black", hjust = 0.5),
plot.subtitle = element_text(family = "Arial Black", hjust = 0.5),
plot.caption = element_text(family = "Times New Roman", hjust = 0),
plot.background = element_rect(fill = "#121E1E"),
panel.background = element_blank(),
panel.grid.major = element_line(color = "gray30", size = 0.2),
panel.grid.minor = element_line(color = "gray30", size = 0.2))
data21 %>%
#filter(FechaMuerte2 > "2020-12-31") %>%
ggplot(aes(y = Departamento)) +
geom_bar(color = "#121E1E", fill = "#00BB92") +
labs(title = "Cantidad de fallecidos por COVID-19 por departamento",
subtitle = "07/04/2019 - 09/06/2021",
caption = "Fuente: Centro Nacional de Epidemiologia, Prevención y Control de Enfermedades – MINSA \nAutor: Denis Rodríguez",
x = "Cantidad de fallecidos",
y = "Departamento") +
dark_theme_dark(base_family = "Calibri", base_size = 11) +
theme(plot.title = element_text(family = "Calibri", hjust = 0.5),
plot.subtitle = element_text(family = "Calibri", hjust = 0.5),
plot.caption = element_text(family = "Calibri", hjust = 0),
plot.background = element_rect(fill = "#121E1E"),
panel.background = element_blank(),
panel.grid.major = element_line(color = "gray30", size = 0.2),
panel.grid.minor = element_line(color = "gray30", size = 0.2))
# FALLECIDOS POR COVID - 19 (Acumulación diaria) -------------------------
data21 %>%
#filter(FechaMuerte2 > "2020-12-31") %>%
count(day = floor_date(FechaMuerte2, "day")) %>%
ggplot(aes(day, n)) +
geom_line(color = "#00BB92", size = 0.8) +
labs(title = "Fallecidos por COVID-19 (acumulación diaria)",
subtitle = "07/04/2019 - 09/06/2021",
caption = "Fuente: Centro Nacional de Epidemiologia, Prevención y Control de Enfermedades – MINSA \nAutor: Denis Rodríguez",
x = "Semana",
y = "Catidad de fallecidos") +
theme_grey(base_size = 12, base_line_size = 0.6, base_rect_size = 0.6) -> p1
p1 + dark_theme_dark(base_family = "Arial Black", base_size = 10) +
theme(plot.title = element_text(family = "Arial Black", hjust = 0.5),
plot.subtitle = element_text(family = "Arial Black", hjust = 0.5),
plot.caption = element_text(family = "Times New Roman", hjust = 0),
plot.background = element_rect(fill = "#121E1E"),
panel.background = element_blank(),
panel.grid.major = element_line(color = "gray30", size = 0.2),
panel.grid.minor = element_line(color = "gray30", size = 0.2))
data21 %>%
#filter(FechaMuerte2 > "2020-12-31") %>%
ggplot(aes(y = Departamento)) +
geom_bar(color = "#121E1E", fill = "#00BB92") +
labs(title = "Cantidad de fallecidos por COVID-19 por departamento",
subtitle = "07/04/2019 - 09/06/2021",
caption = "Fuente: Centro Nacional de Epidemiologia, Prevención y Control de Enfermedades – MINSA \nAutor: Denis Rodríguez",
x = "Cantidad de fallecidos",
y = "Departamento") +
dark_theme_dark(base_family = "Calibri", base_size = 11) +
theme(plot.title = element_text(family = "Calibri", hjust = 0.5),
plot.subtitle = element_text(family = "Calibri", hjust = 0.5),
plot.caption = element_text(family = "Calibri", hjust = 0),
plot.background = element_rect(fill = "#121E1E"),
panel.background = element_blank(),
panel.grid.major = element_line(color = "gray30", size = 0.2),
panel.grid.minor = element_line(color = "gray30", size = 0.2))
# LIMPIEZA DE LOS DATOS ---------------------------------------------------
# Primera Forma
data2 <- data %>%
mutate(
FECHA_CORTE = NULL,
UUID = NULL,
Year  = substring(FECHA_FALLECIMIENTO, 1,4),
Month = substring(FECHA_FALLECIMIENTO, 5,6),
Day   = substring(FECHA_FALLECIMIENTO, 7,8),
Departamento = as.factor(str_to_title(DEPARTAMENTO)),
Provincia    = as.factor(PROVINCIA),
Distrito     = as.factor(DISTRITO),
Sexo = as.factor(SEXO),
CriterioMuerte = CLASIFICACION_DEF,
Ubigeo = UBIGEO,
Edad = as.integer(EDAD_DECLARADA)) %>%
select(Year, Month, Day, Ubigeo, Departamento, Provincia, Distrito, Sexo, Edad, CriterioMuerte)
# Unimos el campo año, mes y dia al campo fechaMuerte y lo convertimos a tipo date.
data21 <- data2 %>% unite(fecha, Year,Month, sep = "-") %>%
unite(FechaMuerte, fecha, Day, sep = "-") %>%
mutate(FechaMuerte2 = as.Date(FechaMuerte))
# FALLECIDOS POR COVID - 19 (Acumulación diaria) -------------------------
data21 %>%
#filter(FechaMuerte2 > "2020-12-31") %>%
count(day = floor_date(FechaMuerte2, "day")) %>%
ggplot(aes(day, n)) +
geom_line(color = "#00BB92", size = 0.8) +
labs(title = "Fallecidos por COVID-19 (acumulación diaria)",
subtitle = "07/04/2019 - 09/06/2021",
caption = "Fuente: Centro Nacional de Epidemiologia, Prevención y Control de Enfermedades – MINSA \nAutor: Denis Rodríguez",
x = "Semana",
y = "Catidad de fallecidos") +
theme_grey(base_size = 12, base_line_size = 0.6, base_rect_size = 0.6) -> p1
p1 + dark_theme_dark(base_family = "Arial Black", base_size = 10) +
theme(plot.title = element_text(family = "Arial Black", hjust = 0.5),
plot.subtitle = element_text(family = "Arial Black", hjust = 0.5),
plot.caption = element_text(family = "Times New Roman", hjust = 0),
plot.background = element_rect(fill = "#121E1E"),
panel.background = element_blank(),
panel.grid.major = element_line(color = "gray30", size = 0.2),
panel.grid.minor = element_line(color = "gray30", size = 0.2))
data21 %>%
#filter(FechaMuerte2 > "2020-12-31") %>%
ggplot(aes(y = Departamento)) +
geom_bar(color = "#121E1E", fill = "#00BB92") +
labs(title = "Cantidad de fallecidos por COVID-19 por departamento",
subtitle = "07/04/2019 - 09/06/2021",
caption = "Fuente: Centro Nacional de Epidemiologia, Prevención y Control de Enfermedades – MINSA \nAutor: Denis Rodríguez",
x = "Cantidad de fallecidos",
y = "Departamento") +
dark_theme_dark(base_family = "Calibri", base_size = 11) +
theme(plot.title = element_text(family = "Calibri", hjust = 0.5),
plot.subtitle = element_text(family = "Calibri", hjust = 0.5),
plot.caption = element_text(family = "Calibri", hjust = 0),
plot.background = element_rect(fill = "#121E1E"),
panel.background = element_blank(),
panel.grid.major = element_line(color = "gray30", size = 0.2),
panel.grid.minor = element_line(color = "gray30", size = 0.2))
# Edad pormedio de muerte por criterio de fallecimiento
data21 %>%
group_by(CriterioMuerte) %>%
summarise(EdadPromedio = mean(Edad, na.rm = T)) %>%
arrange(desc(EdadPromedio))
# Cantidad de fallecidos por departamento y edad promedio de muerte
data21 %>%
group_by(Departamento) %>%
summarise(Cantidad = n(),
Edadpromedio = mean(Edad, na.rm = T)) %>% view()
# Calcular la edad promedio de fallecidos por departamento.
data21 %>%
group_by(Departamento) %>%
summarise(EdadPromedio = mean(Edad, na.rm = T))
# Edad pormedio de muerte por criterio de fallecimiento
data21 %>%
group_by(CriterioMuerte) %>%
summarise(EdadPromedio = mean(Edad, na.rm = T)) %>%
arrange(desc(EdadPromedio))
# Cantidad de fallecidos por departamento y edad promedio de muerte
data21 %>%
group_by(Departamento) %>%
summarise(Cantidad = n(),
Edadpromedio = mean(Edad, na.rm = T)) %>% view()
data21 %>%
filter(Departamento == "Lima Metropolitana") %>%
group_by(Distrito) %>%
summarise(Cantidad = n(),
Edadpromedio = round(mean(Edad, na.rm = T),2)) %>%
arrange(desc(Cantidad)) -> fallecidosLima
data21 %>%
filter(Departamento == "Lima Metropolitana") %>%
group_by(Distrito) %>%
summarise(Cantidad = n(),
Edadpromedio = round(mean(Edad, na.rm = T),2)) %>%
arrange(desc(Cantidad))
View(p1)
